diff --git a/src/pages/ItemsPage.jsx b/src/pages/ItemsPage.jsx
new file mode 100644
--- /dev/null
+++ b/src/pages/ItemsPage.jsx
@@
+import React, { useEffect, useState } from "react";
+import { fetchItems, createItem, updateItem } from "../api";
+import ItemModal from "../components/ItemModal";
+
+export default function ItemsPage() {
+  const [items, setItems] = useState([]);
+  const [loading, setLoading] = useState(false);
+  const [modalOpen, setModalOpen] = useState(false);
+  const [editingItem, setEditingItem] = useState(null);
+  const [saving, setSaving] = useState(false);
+
+  const fetchList = async () => {
+    setLoading(true);
+    try {
+      const data = await fetchItems();
+      setItems(data);
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  useEffect(() => { fetchList(); }, []);
+
+  const onSave = async (formData) => {
+    setSaving(true);
+    try {
+      if (editingItem?.id) {
+        await updateItem(editingItem.id, formData);
+      } else {
+        await createItem(formData);
+      }
+      await fetchList();
+      setModalOpen(false);
+      setEditingItem(null);
+    } finally {
+      setSaving(false);
+    }
+  };
+
+  return (
+    <div className="p-4">
+      <div className="flex items-center justify-between mb-4">
+        <h2 className="text-lg font-semibold">Items</h2>
+        <button
+          className="px-3 py-1 rounded bg-blue-600 text-white"
+          onClick={() => { setEditingItem(null); setModalOpen(true); }}
+        >
+          Add Item
+        </button>
+      </div>
+      <ItemModal open={modalOpen} onClose={() => !saving && setModalOpen(false)} item={editingItem} onSave={onSave} saving={saving} />
+      {loading ? <p>Loading…</p> : (
+        <table className="min-w-full bg-white">
+          <thead>
+            <tr><th className="px-4 py-2">Name</th><th className="px-4 py-2">Rate</th></tr>
+          </thead>
+          <tbody>
+            {items.map(it => (
+              <tr key={it.id}><td className="px-4 py-2">{it.name}</td><td className="px-4 py-2">{it.rate}</td></tr>
+            ))}
+          </tbody>
+        </table>
+      )}
+    </div>
+  );
+}
diff --git a/src/pages/PartiesPage.jsx b/src/pages/PartiesPage.jsx
new file mode 100644
--- /dev/null
+++ b/src/pages/PartiesPage.jsx
@@
+import React, { useEffect, useState } from "react";
+import { fetchParties, createParty, updateParty } from "../api";
+import PartyModal from "../components/PartyModal";
+
+export default function PartiesPage() {
+  const [parties, setParties] = useState([]);
+  const [loading, setLoading] = useState(false);
+  const [modalOpen, setModalOpen] = useState(false);
+  const [editingParty, setEditingParty] = useState(null);
+  const [saving, setSaving] = useState(false);
+
+  const fetchList = async () => {
+    setLoading(true);
+    try {
+      const data = await fetchParties();
+      setParties(data);
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  useEffect(() => { fetchList(); }, []);
+
+  const onSave = async (formData) => {
+    setSaving(true);
+    try {
+      if (editingParty?.id) {
+        await updateParty(editingParty.id, formData);
+      } else {
+        await createParty(formData);
+      }
+      await fetchList();
+      setModalOpen(false);
+      setEditingParty(null);
+    } finally {
+      setSaving(false);
+    }
+  };
+
+  return (
+    <div className="p-4">
+      <div className="flex items-center justify-between mb-4">
+        <h2 className="text-lg font-semibold">Parties</h2>
+        <button
+          className="px-3 py-1 rounded bg-green-600 text-white"
+          onClick={() => { setEditingParty(null); setModalOpen(true); }}
+        >
+          Add Party
+        </button>
+      </div>
+      <PartyModal open={modalOpen} onClose={() => !saving && setModalOpen(false)} party={editingParty} onSave={onSave} saving={saving} />
+      {loading ? <p>Loading…</p> : (
+        <ul>{parties.map(p => <li key={p.id}>{p.name}</li>)}</ul>
+      )}
+    </div>
+  );
+}
diff --git a/src/pages/PurchasesPage.jsx b/src/pages/PurchasesPage.jsx
new file mode 100644
--- /dev/null
+++ b/src/pages/PurchasesPage.jsx
@@
+import React, { useEffect, useState } from "react";
+import { fetchPurchases, createPurchase, updatePurchase } from "../api";
+import PurchaseModal from "../components/PurchaseModal";
+
+export default function PurchasesPage() {
+  const [purchases, setPurchases] = useState([]);
+  const [loading, setLoading] = useState(false);
+  const [modalOpen, setModalOpen] = useState(false);
+  const [editingPurchase, setEditingPurchase] = useState(null);
+  const [saving, setSaving] = useState(false);
+
+  const fetchList = async () => {
+    setLoading(true);
+    try {
+      const data = await fetchPurchases();
+      setPurchases(data);
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  useEffect(() => { fetchList(); }, []);
+
+  const onSave = async (formData) => {
+    setSaving(true);
+    try {
+      if (editingPurchase?.id) {
+        await updatePurchase(editingPurchase.id, formData);
+      } else {
+        await createPurchase(formData);
+      }
+      await fetchList();
+      setModalOpen(false);
+      setEditingPurchase(null);
+    } finally {
+      setSaving(false);
+    }
+  };
+
+  return (
+    <div className="p-4">
+      <div className="flex items-center justify-between mb-4">
+        <h2 className="text-lg font-semibold">Purchases</h2>
+        <button
+          className="px-3 py-1 rounded bg-indigo-600 text-white"
+          onClick={() => { setEditingPurchase(null); setModalOpen(true); }}
+        >
+          Add Purchase
+        </button>
+      </div>
+      <PurchaseModal open={modalOpen} onClose={() => !saving && setModalOpen(false)} purchase={editingPurchase} onSave={onSave} saving={saving} />
+      {loading ? <p>Loading…</p> : (
+        <table className="min-w-full bg-white">
+          <thead><tr><th>Date</th><th>Party</th><th>Subtotal</th><th>Tax</th><th>Total</th></tr></thead>
+          <tbody>
+            {purchases.map(p => (
+              <tr key={p.id}>
+                <td>{p.date ? new Date(p.date).toLocaleDateString() : ""}</td>
+                <td>{p.party_name}</td>
+                <td>{p.sub_total}</td>
+                <td>{p.tax_total}</td>
+                <td>{p.grand_total}</td>
+              </tr>
+            ))}
+          </tbody>
+        </table>
+      )}
+    </div>
+  );
+}
